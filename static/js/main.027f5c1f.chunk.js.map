{"version":3,"sources":["components/form/ProfileInput.js","components/form/ExperienceInput.js","components/form/EducationInput.js","components/form/Form.js","components/preview/Profile.js","components/preview/Experience.js","components/preview/Education.js","components/preview/Preview.js","App.js","index.js"],"names":["ProfileInput","props","profileInput","handleProfileChange","className","name","type","value","placeholder","onChange","id","ExperienceInput","experienceInput","handleExperienceChange","data-id","EducationInput","educationInput","handleEducationChange","Form","handleSubmit","addExperience","addEducation","removeExperience","removeEducation","onSubmit","map","obj","length","onClick","Profile","profile","renderedInfo","Object","keys","forEach","key","push","firstName","lastName","Experience","experience","company","startDate","endDate","Education","education","institution","Preview","handleEditBtnClick","App","useState","phoneNum","email","address","summary","setProfile","uniqid","position","description","setExperience","discipline","graduationYear","setEducation","setProfileInput","setExperienceInput","setEducationInput","edit","setEdit","e","target","prevInput","dataset","preventDefault","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.027f5c1f.chunk.js","sourcesContent":["const ProfileInput = (props) => {\n    const { profileInput, handleProfileChange } = props;\n\n    return (\n        <div>\n            <div className='input-box'>\n                <label>Name:</label>\n                <input\n                    name='firstName'\n                    type='text'\n                    value={profileInput['firstName']}\n                    placeholder='First name'\n                    onChange={handleProfileChange}\n                />\n                <input\n                    name='lastName'\n                    type='text'\n                    value={profileInput['lastName']}\n                    placeholder='Last name'\n                    onChange={handleProfileChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Phone number:</label>\n                <input\n                    name='phoneNum'\n                    type='tel'\n                    value={profileInput['phoneNum']}\n                    onChange={handleProfileChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Email:</label>\n                <input\n                    name='email'\n                    type='email'\n                    value={profileInput['email']}\n                    onChange={handleProfileChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Address:</label>\n                <input\n                    id='address-input'\n                    name='address'\n                    type='text'\n                    value={profileInput['address']}\n                    onChange={handleProfileChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Summary:</label>\n                <textarea\n                    name='summary'\n                    value={profileInput['summary']}\n                    onChange={handleProfileChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInput;\n","const ExperienceInput = (props) => {\n    const { experienceInput, handleExperienceChange } = props;\n\n    return (\n        <div>\n            <div className='input-box'>\n                <label>Company name:</label>\n                <input\n                    data-id={experienceInput.id}\n                    name='company'\n                    type='text'\n                    value={experienceInput['company']}\n                    onChange={handleExperienceChange}\n                />\n            </div>\n            <div className='input-box'>\n            <label>Position:</label>\n            <input\n                data-id={experienceInput.id}\n                name='position'\n                type='text'\n                value={experienceInput['position']}\n                onChange={handleExperienceChange}\n            />\n            </div>\n            <div className='input-box'>\n                <label>Start date:</label>\n                <input\n                    data-id={experienceInput.id}\n                    name='startDate'\n                    type='date'\n                    value={experienceInput['startDate']}\n                    onChange={handleExperienceChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>End date:</label>\n                <input\n                    data-id={experienceInput.id}\n                    name='endDate'\n                    type='date'\n                    value={experienceInput['endDate']}\n                    onChange={handleExperienceChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Work description:</label>\n                <textarea\n                    data-id={experienceInput.id}\n                    name='description'\n                    value={experienceInput['description']}\n                    onChange={handleExperienceChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ExperienceInput;\n","const EducationInput = (props) => {\n    const { educationInput, handleEducationChange } = props;\n\n    return (\n        <div>\n            <div className='input-box'>\n                <label>Institution name:</label>\n                <input\n                    data-id={educationInput.id}\n                    name='institution'\n                    type='text'\n                    value={educationInput['institution']}\n                    onChange={handleEducationChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Discipline:</label>\n                <input\n                    data-id={educationInput.id}\n                    name='discipline'\n                    type='text'\n                    value={educationInput['discipline']}\n                    onChange={handleEducationChange}\n                />\n            </div>\n            <div className='input-box'>\n                <label>Graduation year:</label>\n                <input\n                    data-id={educationInput.id}\n                    name='graduationYear'\n                    type='date'\n                    value={educationInput['graduationYear']}\n                    onChange={handleEducationChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default EducationInput;\n","import ProfileInput from './ProfileInput';\nimport ExperienceInput from './ExperienceInput';\nimport EducationInput from './EducationInput';\n\nconst Form = (props) => {\n    const {\n        profileInput,\n        experienceInput,\n        educationInput,\n        handleProfileChange,\n        handleExperienceChange,\n        handleEducationChange,\n        handleSubmit,\n        addExperience,\n        addEducation,\n        removeExperience,\n        removeEducation\n    } = props;\n\n    return (\n        <form className='outer' onSubmit={handleSubmit}>\n            <button id='save-btn' type='submit'>Save</button>\n            <div className='main'>\n                <div className='input-section'>\n                    <ProfileInput\n                        profileInput={profileInput}\n                        handleProfileChange={handleProfileChange}\n                    />\n                </div>\n                <div className='separation' />\n                <div className='input-section'>\n                    <h3>Work Experience</h3>\n                    {experienceInput.map((obj) => {\n                        return (\n                            <div key={obj.id} className='experience-input'>\n                                <ExperienceInput\n                                    experienceInput={obj}\n                                    handleExperienceChange={handleExperienceChange}\n                                />\n                                {experienceInput.length > 1 &&\n                                    <button className='remove-btn' type='button' data-id={obj.id} onClick={removeExperience}>Remove Experience</button>\n                                }\n                            </div>\n                        )\n                    })}\n                    <button className='add-btn' type='button' onClick={addExperience}>Add Experience</button>\n                </div>\n                <div className='separation' />\n                <div className='input-section'>\n                    <h3>Education</h3>\n                    {educationInput.map((obj) => {\n                        return (\n                            <div key={obj.id} className='education-input'>\n                                <EducationInput\n                                    educationInput={obj}\n                                    handleEducationChange={handleEducationChange}\n                                />\n                                {educationInput.length > 1 &&\n                                    <button className='remove-btn' type='button' data-id={obj.id} onClick={removeEducation}>Remove Education</button>\n                                }\n                            </div>\n                        )\n                    })}\n                    <button className='add-btn' type='button' onClick={addEducation}>Add Education</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;\n","const Profile = (props) => {\n    const { profile } = props;\n\n    const renderedInfo = [];\n    \n    Object.keys(profile).forEach((key) => {\n        switch (true) {\n            case (key === 'firstName'):\n                renderedInfo.push(<h2 key={key} id='name-preview'>{profile.firstName} {profile.lastName}</h2>);\n                break;\n            case (key === 'phoneNum' || key === 'email' || key === 'address' || key === 'summary'):\n                renderedInfo.push(<p key={key} id={`${key}-preview`}>{profile[key]}</p>);\n                break;\n            default:\n                break;\n        }\n    })\n\n    return (\n        <div className='preview-section' id='profile-section'>\n            {renderedInfo}\n        </div>\n    )\n}\n\nexport default Profile;\n","const Experience = (props) => {\n    const { experience } = props;\n\n    const renderedInfo = [];\n\n    Object.keys(experience).forEach((key) => {\n        switch (true) {\n            case (key === 'company'):\n                renderedInfo.push(<h4 key={key}>{experience.company}</h4>);\n                break;\n            case (key === 'position' || key === 'description'):\n                renderedInfo.push(<p key={key}>{experience[key]}</p>);\n                break;\n            case (key === 'startDate'):\n                renderedInfo.push(<p key={key}>{experience.startDate} - {experience.endDate}</p>);\n                break;\n            default:\n                break;\n        }\n    })\n\n    return (\n        <div className='experience-section'>\n            {renderedInfo}\n        </div>\n    )\n}\n\nexport default Experience;\n","const Education = (props) => {\n    const { education } = props;\n\n    const renderedInfo = [];\n\n    Object.keys(education).forEach((key) => {\n        switch (true) {\n            case (key === 'institution'):\n                renderedInfo.push(<h4 key={key}>{education.institution}</h4>);\n                break;\n            case (key === 'discipline' || key === 'graduationYear'):\n                renderedInfo.push(<p key={key}>{education[key]}</p>);\n                break;\n            default:\n                break;\n        }\n    })\n\n    return (\n        <div className='education-section'>\n            {renderedInfo}\n        </div>\n    )\n}\n\nexport default Education;\n","import Profile from './Profile';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Preview = (props) => {\n    const { profile, experience, education, handleEditBtnClick } = props;\n\n    return (\n        <div className='outer'>\n            <button id='edit-btn' onClick={handleEditBtnClick}>Edit</button>\n            <div className='main'>\n                <div className='preview-section'>\n                    <Profile profile={profile} />\n                </div>\n                <div className='separation' />\n                <div className='preview-section'>\n                    <h3>Work Experience</h3>\n                    {experience.map((obj) => {\n                        return (\n                            <Experience key={obj.id} experience={obj} />\n                        )\n                    })}\n                </div>\n                <div className='separation' />\n                <div className='preview-section'>\n                    <h3>Education</h3>\n                    {education.map((obj) => {\n                        return (\n                            <Education key={obj.id} education={obj} />\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Preview;\n","import { useState } from 'react';\nimport uniqid from 'uniqid';\nimport Form from './components/form/Form';\nimport Preview from './components/preview/Preview';\n\nconst App = () => {\n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    address: '',\n    summary: ''\n  });\n\n  const [experience, setExperience] = useState([\n    {\n      id: uniqid(),\n      company: '',\n      position: '',\n      startDate: '',\n      endDate: '',\n      description: '',\n    }\n  ]);\n\n  const [education, setEducation] = useState([\n    {\n      id: uniqid(),\n      institution: '',\n      discipline: '',\n      graduationYear: '',\n    },\n  ]);\n\n  const [profileInput, setProfileInput] = useState(profile);\n  const [experienceInput, setExperienceInput] = useState(experience);\n  const [educationInput, setEducationInput] = useState(education);\n\n  const [edit, setEdit] = useState(true);\n\n  const handleProfileChange = (e) => {\n    const { name, value } = e.target;\n    setProfileInput((prevInput) => ({\n      ...prevInput,\n      [name]: value,\n    }));\n  };\n\n  const handleExperienceChange = (e) => {\n    const { dataset:{id}, name, value } = e.target;\n    setExperienceInput((prevInput) =>\n      prevInput.map((obj) => obj.id === id ? {...obj, [name]: value} : obj));\n  };\n\n  const handleEducationChange = (e) => {\n    const { dataset:{id}, name, value } = e.target;\n    setEducationInput((prevInput) =>\n      prevInput.map((obj) => obj.id === id ? {...obj, [name]: value} : obj));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setProfile(profileInput);\n    setExperience(experienceInput);\n    setEducation(educationInput);\n    setEdit(false);\n  }\n\n  const handleEditBtnClick = () => setEdit(true);\n\n  const addExperience = () => {\n    setExperienceInput((prevInput) => [\n      ...prevInput,\n      {\n        id: uniqid(),\n        company: '',\n        position: '',\n        startDate: '',\n        endDate: '',\n        description: '',\n      }\n    ])\n  }\n\n  const addEducation = () => {\n    setEducationInput((prevInput) => [\n      ...prevInput,\n      {\n        id: uniqid(),\n        institution: '',\n        discipline: '',\n        graduationYear: '',\n      }\n    ])\n  }\n\n  const removeExperience = (e) => {\n    const { dataset:{id} } = e.target;\n    setExperienceInput((prevInput) => prevInput.filter((obj) => obj.id !== id));\n  }\n\n  const removeEducation = (e) => {\n    const { dataset:{id} } = e.target;\n    setEducationInput((prevInput) => prevInput.filter((obj) => obj.id !== id));\n  }\n\n  return (\n    <div>\n      {edit\n        ? <Form\n            profileInput={profileInput}\n            experienceInput={experienceInput}\n            educationInput={educationInput}\n            handleProfileChange={handleProfileChange}\n            handleExperienceChange={handleExperienceChange}\n            handleEducationChange={handleEducationChange}\n            handleSubmit={handleSubmit}\n            addExperience={addExperience}\n            addEducation={addEducation}\n            removeExperience={removeExperience}\n            removeEducation={removeEducation}\n          />\n        : <Preview\n            profile={profile}\n            experience={experience}\n            education={education}\n            handleEditBtnClick={handleEditBtnClick}\n          />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}